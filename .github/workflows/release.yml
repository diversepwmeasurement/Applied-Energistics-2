jobs:
  build:
    name: Build
    outputs:
      API_NAME: ${{ steps.prepare_artifact_metadata.outputs.API_NAME }}
      API_PATH: ${{ steps.prepare_artifact_metadata.outputs.API_PATH }}
      ARTIFACT_NAME: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_NAME }}
      ARTIFACT_PATH: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_PATH }}
      JAVADOC_NAME: ${{ steps.prepare_artifact_metadata.outputs.JAVADOC_NAME }}
      JAVADOC_PATH: ${{ steps.prepare_artifact_metadata.outputs.JAVADOC_PATH }}
      VERSION: ${{ steps.prepare_artifact_metadata.outputs.VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/gradle-setup
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Build with Gradle
      run: ./gradlew build -x check --no-daemon --max-workers 1
    - continue-on-error: true
      id: prepare_artifact_metadata
      name: Prepare artifact metadata. Note that VERSION is set by the gradle script.
      run: 'echo ARTIFACT_PATH=./build/libs/appliedenergistics2-neoforge-${VERSION}.jar
        >> $GITHUB_OUTPUT

        echo ARTIFACT_NAME=appliedenergistics2-neoforge-${VERSION}.jar >> $GITHUB_OUTPUT

        echo JAVADOC_PATH=./build/libs/appliedenergistics2-neoforge-${VERSION}-javadoc.jar
        >> $GITHUB_OUTPUT

        echo JAVADOC_NAME=appliedenergistics2-neoforge-${VERSION}-javadoc.jar >> $GITHUB_OUTPUT

        echo API_PATH=./build/libs/appliedenergistics2-neoforge-${VERSION}-api.jar
        >> $GITHUB_OUTPUT

        echo API_NAME=appliedenergistics2-neoforge-${VERSION}-api.jar >> $GITHUB_OUTPUT

        echo VERSION=${VERSION} >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Archive build results
      run: tar -I zstd -cf build.tar.zst .gradle build src/generated
    - continue-on-error: true
      name: Upload build and gradle folders
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: build-artifacts
        path: build.tar.zst
        retention-days: 3
  deploy-curseforge:
    name: Deploy to Curseforge
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    - continue-on-error: true
      name: Unpack build artifact
      run: tar axf build.tar.zst
    - continue-on-error: true
      name: Validate artifacts exist
      run: test -d ./build
    - continue-on-error: true
      name: Upload to Curseforge
      uses: Kir-Antipov/mc-publish@4db8bd126f74d5e143822181a2b1201308e2c796
      with:
        curseforge-id: 223794
        curseforge-token: ${{ secrets.CURSEFORGE }}
        dependencies: 'jade(optional){modrinth:nvQzSEkH}{curseforge:324717}

          wthit(optional){modrinth:6AQIaxuO}{curseforge:440979}

          rei(optional){modrinth:nfn13YXA}{curseforge:310111}

          jei(optional){modrinth:u6dRKJwZ}{curseforge:238222}

          optifine(incompatible)

          theoneprobe(optional){modrinth:Eyw0UxEx}{curseforge:245211}

          '
        files: ${{ needs.build.outputs.ARTIFACT_PATH }}
        loaders: neoforge
        name: AE2 ${{ needs.build.outputs.VERSION }} [NEOFORGE]
        version: ${{ needs.build.outputs.VERSION }}
  deploy-github-packages:
    name: Deploy to Github Packages
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/gradle-setup
    - continue-on-error: true
      name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    - continue-on-error: true
      name: Unpack build artifact
      run: tar axf build.tar.zst
    - continue-on-error: true
      name: Validate artifacts exist
      run: test -d ./build && test -d ./.gradle
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish to Github Packages
      run: ./gradlew publishMavenPublicationToGitHubPackagesRepository --no-daemon
        --max-workers 1
  deploy-modmaven:
    name: Deploy to Modmaven
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/gradle-setup
    - continue-on-error: true
      name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    - continue-on-error: true
      name: Unpack build artifact
      run: tar axf build.tar.zst
    - continue-on-error: true
      name: Validate artifacts exist
      run: test -d ./build && test -d ./.gradle
    - continue-on-error: true
      env:
        MODMAVEN_PASSWORD: ${{ secrets.MODMAVEN_PASSWORD }}
        MODMAVEN_USER: ${{ secrets.MODMAVEN_USER }}
      name: Publish to Modmaven
      run: ./gradlew publishMavenPublicationToModmavenRepository --no-daemon --max-workers
        1
  deploy-modrinth:
    name: Deploy to Modrinth
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    - continue-on-error: true
      name: Unpack build artifact
      run: tar axf build.tar.zst
    - continue-on-error: true
      name: Validate artifacts exist
      run: test -d ./build
    - continue-on-error: true
      name: Upload to Modrinth
      uses: Kir-Antipov/mc-publish@4db8bd126f74d5e143822181a2b1201308e2c796
      with:
        dependencies: 'jade(optional){modrinth:nvQzSEkH}{curseforge:324717}

          wthit(optional){modrinth:6AQIaxuO}{curseforge:440979}

          rei(optional){modrinth:nfn13YXA}{curseforge:310111}

          jei(optional){modrinth:u6dRKJwZ}{curseforge:238222}

          optifine(incompatible)

          theoneprobe(optional){modrinth:Eyw0UxEx}{curseforge:245211}

          '
        files: ${{ needs.build.outputs.ARTIFACT_PATH }}
        loaders: neoforge
        modrinth-id: XxWD5pD3
        modrinth-token: ${{ secrets.MODRINTH }}
        name: AE2 ${{ needs.build.outputs.VERSION }} [NEOFORGE]
        version: ${{ needs.build.outputs.VERSION }}
  upload-release-artifacts:
    name: Upload Release Artifacts
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    - continue-on-error: true
      name: Unpack build artifact
      run: tar axf build.tar.zst
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload Release Artifact
      uses: actions/upload-release-asset@v1.0.1
      with:
        asset_content_type: application/zip
        asset_name: ${{ needs.build.outputs.ARTIFACT_NAME }}
        asset_path: ${{ needs.build.outputs.ARTIFACT_PATH }}
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload Javadocs Artifact
      uses: actions/upload-release-asset@v1.0.1
      with:
        asset_content_type: application/zip
        asset_name: ${{ needs.build.outputs.JAVADOC_NAME }}
        asset_path: ${{ needs.build.outputs.JAVADOC_PATH }}
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload API
      uses: actions/upload-release-asset@v1.0.1
      with:
        asset_content_type: application/zip
        asset_name: ${{ needs.build.outputs.API_NAME }}
        asset_path: ${{ needs.build.outputs.API_PATH }}
        upload_url: ${{ github.event.release.upload_url }}
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
